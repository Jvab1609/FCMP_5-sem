package provab2;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import javax.swing.JPanel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author 202310501
 */
public class ProvaB2 extends javax.swing.JFrame {
    
    int s = 20;
    int d = 5;
    int x = 250;
    int y = 200;
    
    /**
     * Creates new form Exercicio2
     */
    public ProvaB2() {
        initComponents();
        jPanel1.requestFocus();
    }
    
    Bolinha player = new Bolinha(s, d, x, y);
    
    
//    private void pintaBolinha(Graphics g) {
//        g.setColor(Color.GREEN);
//        g.fillOval(x, y, s, s);
//        //jPanel1.paint(g); // Cada vez que a janela der refresh, vai pintar
//    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanel() {
            public void paint(Graphics g) {
                super.paint(g);
                player.pintaBolinha(g);
            }
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        int tecla = evt.getKeyCode();
        int height = jPanel1.getHeight();
        int width = jPanel1.getWidth();
        
        switch(tecla) {
            case KeyEvent.VK_UP: 
                y-=d;
                player.setY(y);
                break;
            case KeyEvent.VK_DOWN: 
                y+=d;
                player.setY(y);
                break;
            case KeyEvent.VK_LEFT:
                x-=d;
                player.setX(x);
                break;
            case KeyEvent.VK_RIGHT:
                x+=d;
                player.setX(x);
                break;
            case KeyEvent.VK_S:
                if (d < 20) {
                    d++;
                    player.setD(d);
                }
                break;
            case KeyEvent.VK_X:
                if (d > 1) {
                    d--;
                    player.setD(d);
                }
                break;     
            case KeyEvent.VK_A:
                if (s < 100) { 
                    // Tratar colisão por estados => ex: estado de mudar de tamanho, faz esse tratamento
                    // Parâmetros: int estado, int height int width
//                    if (y <= 0) {;
//                        y++;
//                        player.setY(y);
//                    }
//                    else if (y >= height - s) {
//                        y--;
//                        player.setY(y);
//                    }
//                    if (x <= 0) {
//                        x++;
//                        player.setX(x);
//                    }
//                    else if (x >= width - s) {
//                        x--;
//                        player.setX(x);
//                    }
                    s++;
                    player.setS(s);
                }
                break;
            case KeyEvent.VK_Z:
                if (s > 1) {
                    s--;
                    player.setS(s);
                }
                break;
        }
        
        int[] check = player.checarColisao(x, y, height, width);
        x = check[0];
        y = check[1];
        
        this.repaint();
        // Tratar colis�o
        // Variar velocidade (Aumentar = S; Diminuir = X) 
        // Variar tamanho (Aumentar = A; Diminuit = Z)
        // Tratar a colis�o depois de modificar
            // jPanel1.getWidth e Height
        // Repintar
        // Criar uma segunda bolinha controlada pelo computador, por thread
            // A cada execu��o do thread (0.5s), sortear: se vai aumentar/diminuir/manter tamanho e velocidade; dire��o/sentido do movimento; + controlar colis�o
            
    }//GEN-LAST:event_jPanel1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProvaB2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProvaB2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProvaB2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProvaB2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProvaB2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
